name: Laravel-CD without Test

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#      with:
#        php-version: '8.2'
#    - uses: actions/checkout@v3
#    - name: Copy .env
#      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#    - name: Install Dependencies
#      run: composer install --ignore-platform-reqs -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#    - name: Generate key
#      run: php artisan key:generate
#    - name: Directory Permissions
#      run: chmod -R 777 storage bootstrap/cache
#    - name: Create Database
#      run: |
#        mkdir -p database
#        touch database/database.sqlite
#    - name: Execute tests (Unit and Feature tests) via PHPUnit
#      env:
#        DB_CONNECTION: sqlite
#        DB_DATABASE: database/database.sqlite
#      run: vendor/bin/phpunit

    - name: 'Create env file'
      run: |
        touch .env
        echo "${{ secrets.ENV_FILE }}" >> .env

      # 애플리케이션을 이미지로 build 하고 push합니다.
    - name: Docker build
      run: |
        docker build -t jiyu1948/brave_webtoon:laraback .
        cd ./frontend
        docker build -t jiyu1948/brave_webtoon:larafront .

      # Container Registry에 로그인합니다.
    - name: DockerHub Login
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: DockerHub push
      run: |
        docker push jiyu1948/brave_webtoon:laraback
        docker push jiyu1948/brave_webtoon:larafront

#    - name: Push BE image to DockerRepository
#      uses: docker/build-push-action@v5
#      with:
#        push: true
#        tags: |
#          jiyu1948/brave_webtoon:laraback
#
#    - name: Push FE image to DockerRepository
#      uses: docker/build-push-action@v5
#      with:
#        context: ./frontend
#        file: ./frontend/Dockerfile
#        push: true
#        tags: |
#          jiyu1948/brave_webtoon:larafront

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
        deploy-directory: ./deploy
    steps:
        - name: Get Github Actions IP
          id: ip
          uses: haythem/public-ip@v1.2

        - name: Configure AWS Credentials For GitHub Actions
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_IAM_PUBLIC }}
            aws-secret-access-key: ${{ secrets.AWS_IAM_PRIVATE }}
            aws-region: ap-northeast-2

        - name: Add Github Actions IP to Security group
          run: |
            aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

        # ec2에 이미지PULL합니다
        - name: DockerImagePull
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ secrets.AWS_EC2_PUBLIC_DNS }}
            username: ec2-user
            key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
            port: 22
            timeout: 2m
            script_stop: true
            script: |
              echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
              docker pull jiyu1948/brave_webtoon:larafront || exit 12
              docker pull jiyu1948/brave_webtoon:laraback || exit 11

      #deploy.sh 실행 image check,image 네임 변경
        - name: Deploy sh
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ secrets.AWS_EC2_PUBLIC_DNS }}
            username: ec2-user
            key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
            port: 22
            timeout: 40s
            script_stop: true
            script: |
              pwd
              ls
              cd /home/ec2-user/deploy
              sh deploy.sh

        - name: Remove Github Actions IP From Security Group
          run: |
            aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
