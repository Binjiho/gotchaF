name: Laravel-CD without Test

on:
  push:
    branches: [ "master" ]

env:
  # 이미지 이름을 환경변수로 등록합니다.
  IMAGE_NAME: jiyu1948/brave_webtoon

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#      with:
#        php-version: '8.2'
#    - uses: actions/checkout@v3
#    - name: Copy .env
#      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#    - name: Install Dependencies
#      run: composer install --ignore-platform-reqs -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#    - name: Generate key
#      run: php artisan key:generate
#    - name: Directory Permissions
#      run: chmod -R 777 storage bootstrap/cache
#    - name: Create Database
#      run: |
#        mkdir -p database
#        touch database/database.sqlite
#    - name: Execute tests (Unit and Feature tests) via PHPUnit
#      env:
#        DB_CONNECTION: sqlite
#        DB_DATABASE: database/database.sqlite
#      run: vendor/bin/phpunit

    - name: Check out code
      uses: actions/checkout@v2
      # Revision를 이미지의 태그로 만들기 위해 값을 생성합니다.
    - name: Get verion
      id: image
      run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"
      # Container Registry에 로그인합니다.
    - name: DockerHub Login
      uses: docker/login-action@v2.2.0
      with:
          username: jiyu1948
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # 애플리케이션을 이미지로 build 하고 push합니다.
    - name: Push to GitHub Packages
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.image.outputs.version }}
